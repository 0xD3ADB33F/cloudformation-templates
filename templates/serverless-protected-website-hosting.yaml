---
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Stage:
    Type: String
    Default: prod

Resources:
  ApiGatewayRestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      BinaryMediaTypes:
      - "*/*"
      Name: !Sub "${AWS::StackName}-serverless-protected-website-hosting"
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ApiGatewayDeployment
      RestApiId: !Ref ApiGatewayRestApi
      StageName: !Ref Stage
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayProxyMethodRoot
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      StageName: DummyStage

  ApiGatewayProxyMethodRoot:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !GetAtt ApiGatewayRestApi.RootResourceId
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        Type: HTTP_PROXY
        Uri: https://ruempler.eu/
        IntegrationHttpMethod: GET

  ApiGatewayProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: "{proxy+}"
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayProxyMethodCatchall:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiGatewayProxyResource
      RestApiId: !Ref ApiGatewayRestApi
      RequestParameters:
        method.request.path.proxy: true
      Integration:
        Type: HTTP_PROXY
        Uri: "https://ruempler.eu/{proxy}/" # https://forums.aws.amazon.com/message.jspa?messageID=749625
        IntegrationHttpMethod: GET
        RequestParameters:
          integration.request.path.proxy: "method.request.path.proxy"


Outputs:
  ApiGatewayURL:
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"