AWSTemplateFormatVersion: "2010-09-09"
Description: Infrastructure for CloudFormation templates, e.g. pipeline and bucket 
Parameters:
  GithubOauthToken:
    Type: String
  GithubRepoOwner:
    Type: String
  GithubRepoName:
    Type: String
  GithubRepoBranch:
    Type: String
    Default: master
  InfrastructureTemplatePath:
    Type: String
    Default: infrastructure.yml
  InfrastructureStackName:
    Type: String
  DeployFrontendFunctionName:
    Type: String
    Default: cfn-templates-lambda-helpers-prod-deployFrontendAction
  DeployBackendFunctionName:
    Type: String
    Default: cfn-templates-lambda-helpers-prod-deployBackendAction
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Source Code Repository
        Parameters:
          - GithubRepoOwner
          - GithubRepoName
          - GithubRepoBranch
          - GithubOauthToken
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      AccessControl: BucketOwnerFullControl
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt [PipelineRole, Arn]
      ArtifactStore:
        Location:
          Ref:
            ArtifactStoreBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GithubRepoOwner
                Repo: !Ref GithubRepoName
                Branch: !Ref GithubRepoBranch
                OAuthToken: !Ref GithubOauthToken
              RunOrder: 1
        - Name: DeployInfrastructure
          Actions:
          - Name: CreateStack
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: '1'
            InputArtifacts:
              - Name: SourceOutput
            OutputArtifacts:
              - Name: DeployInfrastructureStackOutput
            Configuration:
              RoleArn: !GetAtt [InfrastructureStackRole, Arn]
              TemplatePath: !Sub "SourceOutput::${InfrastructureTemplatePath}"
              ActionMode: CREATE_UPDATE
              StackName: !Ref InfrastructureStackName
              OutputFileName: cfn.json
            RunOrder: 1
        - Name: DeployApp
          Actions:
          - Name: DeployBackend
            ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: 1
                Provider: Lambda
            OutputArtifacts:
              - Name: DeployBackendOutput
            InputArtifacts:
              - Name: SourceOutput
            Configuration:
                FunctionName: !Ref DeployBackendFunctionName
            RunOrder: 1
          - Name: DeployFrontend
            ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: 1
                Provider: Lambda
            InputArtifacts:
              - Name: SourceOutput
              - Name: DeployInfrastructureStackOutput
            Configuration:
                FunctionName: !Ref DeployFrontendFunctionName
            RunOrder: 2
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  InfrastructureStackRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
